# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Teacher(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, user_id: int=None, password: str=None):  # noqa: E501
        """Teacher - a model defined in Swagger

        :param id: The id of this Teacher.  # noqa: E501
        :type id: int
        :param user_id: The user_id of this Teacher.  # noqa: E501
        :type user_id: int
        :param password: The password of this Teacher.  # noqa: E501
        :type password: str
        """
        self.swagger_types = {
            'id': int,
            'user_id': int,
            'password': str
        }

        self.attribute_map = {
            'id': 'id',
            'user_id': 'user_id',
            'password': 'password'
        }

        self._id = id
        self._user_id = user_id
        self._password = password

    @classmethod
    def from_dict(cls, dikt) -> 'Teacher':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Teacher of this Teacher.  # noqa: E501
        :rtype: Teacher
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Teacher.


        :return: The id of this Teacher.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Teacher.


        :param id: The id of this Teacher.
        :type id: int
        """

        self._id = id

    @property
    def user_id(self) -> int:
        """Gets the user_id of this Teacher.


        :return: The user_id of this Teacher.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: int):
        """Sets the user_id of this Teacher.


        :param user_id: The user_id of this Teacher.
        :type user_id: int
        """

        self._user_id = user_id

    @property
    def password(self) -> str:
        """Gets the password of this Teacher.


        :return: The password of this Teacher.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """Sets the password of this Teacher.


        :param password: The password of this Teacher.
        :type password: str
        """

        self._password = password
