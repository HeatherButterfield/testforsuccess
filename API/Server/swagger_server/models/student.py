# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Student(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, user_id: int=None, teacher_id: int=None, semester: datetime=None):  # noqa: E501
        """Student - a model defined in Swagger

        :param id: The id of this Student.  # noqa: E501
        :type id: int
        :param user_id: The user_id of this Student.  # noqa: E501
        :type user_id: int
        :param teacher_id: The teacher_id of this Student.  # noqa: E501
        :type teacher_id: int
        :param semester: The semester of this Student.  # noqa: E501
        :type semester: datetime
        """
        self.swagger_types = {
            'id': int,
            'user_id': int,
            'teacher_id': int,
            'semester': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'user_id': 'user_id',
            'teacher_id': 'teacher_id',
            'semester': 'semester'
        }

        self._id = id
        self._user_id = user_id
        self._teacher_id = teacher_id
        self._semester = semester

    @classmethod
    def from_dict(cls, dikt) -> 'Student':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Student of this Student.  # noqa: E501
        :rtype: Student
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Student.


        :return: The id of this Student.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Student.


        :param id: The id of this Student.
        :type id: int
        """

        self._id = id

    @property
    def user_id(self) -> int:
        """Gets the user_id of this Student.


        :return: The user_id of this Student.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: int):
        """Sets the user_id of this Student.


        :param user_id: The user_id of this Student.
        :type user_id: int
        """

        self._user_id = user_id

    @property
    def teacher_id(self) -> int:
        """Gets the teacher_id of this Student.


        :return: The teacher_id of this Student.
        :rtype: int
        """
        return self._teacher_id

    @teacher_id.setter
    def teacher_id(self, teacher_id: int):
        """Sets the teacher_id of this Student.


        :param teacher_id: The teacher_id of this Student.
        :type teacher_id: int
        """

        self._teacher_id = teacher_id

    @property
    def semester(self) -> datetime:
        """Gets the semester of this Student.


        :return: The semester of this Student.
        :rtype: datetime
        """
        return self._semester

    @semester.setter
    def semester(self, semester: datetime):
        """Sets the semester of this Student.


        :param semester: The semester of this Student.
        :type semester: datetime
        """

        self._semester = semester
